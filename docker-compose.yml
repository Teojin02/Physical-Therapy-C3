version: "3"
services:
  mongo:
    image: mongo:latest
    ports:
      - "20717:20717" 
    volumes:
      - /data/db # Create a volume for the DB.
  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    restart: always
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8081
      - CHOKIDAR_USEPOLLING=true # Hot reloading create react app : https://mherman.org/blog/dockerizing-a-react-app/ ; https://create-react-app.dev/docs/troubleshooting/#npm-start-doesn-t-detect-changes
    restart: always
    stdin_open: true # Hot reloading create react app: https://github.com/facebook/create-react-app/issues/8688#issuecomment-602110747
    volumes: 
      - ./client:/app #Synchronise docker container with local change
      - /app/node_modules #Avoid re-copying local node_modules. Cache in container.
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    depends_on:
      - mongo
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb+srv://Teojin:Sexyteo420@cluster0.xvqpf.mongodb.net/Login?retryWrites=true&w=majority
      - PORT=8081
      - HOST=localhost:3000
      - SENDGRID_API_KEY=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
      - SENDING_EMAIL=Teojincelestino@gmail.com
      - SESSION_KEY=5+KZ8RXeVr1gD043qGuBvKm3UlmHD8Z+
    ports:
      - "8081:8081"
    restart: always
    volumes: 
      - ./server:/app #Synchronise docker container with local change
      - /app/node_modules #Avoid re-copying local node_modules. Cache in container.